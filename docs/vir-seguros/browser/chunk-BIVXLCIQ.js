import{Y as c}from"./chunk-PHZSOFUQ.js";var l=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),o={randomUUID:l};var a,m=new Uint8Array(16);function u(){if(!a){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");a=crypto.getRandomValues.bind(crypto)}return a(m)}var r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));function d(e,n=0){return(r[e[n+0]]+r[e[n+1]]+r[e[n+2]]+r[e[n+3]]+"-"+r[e[n+4]]+r[e[n+5]]+"-"+r[e[n+6]]+r[e[n+7]]+"-"+r[e[n+8]]+r[e[n+9]]+"-"+r[e[n+10]]+r[e[n+11]]+r[e[n+12]]+r[e[n+13]]+r[e[n+14]]+r[e[n+15]]).toLowerCase()}function p(e,n,t){if(o.randomUUID&&!n&&!e)return o.randomUUID();e=e||{};let s=e.random??e.rng?.()??u();if(s.length<16)throw new Error("Random bytes length must be >= 16");if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,n){if(t=t||0,t<0||t+16>n.length)throw new RangeError(`UUID byte range ${t}:${t+15} is out of buffer bounds`);for(let i=0;i<16;++i)n[t+i]=s[i];return n}return d(s)}var g=p;var w=(()=>{class e{constructor(){this.insurancesList=[{insuranceCode:"insu1",insuranceName:"Seguros Gold",sumInsured:2e3,insuranceCost:400},{insuranceCode:"insu2",insuranceName:"Seguros Pro",sumInsured:1500,insuranceCost:275},{insuranceCode:"insu3",insuranceName:"Seguros Vita",sumInsured:700,insuranceCost:100}]}getInsurances(){let t=localStorage.getItem("insuranceList");return t&&(this.insurancesList=JSON.parse(t)),this.insurancesList}getInsuranceByCode(t){let s=this.insurancesList.findIndex(i=>i.insuranceCode===t);return this.insurancesList[s]}addInsurance(t){this.insurancesList.push(t),this.saveChangesInLocalStorage()}deleteInsurance(t){this.insurancesList=this.insurancesList.filter(s=>s.insuranceCode!==t),this.saveChangesInLocalStorage()}editInsurance(t){let s=this.insurancesList.findIndex(i=>i.insuranceCode===t.insuranceCode);s!==-1&&(this.insurancesList[s]=t),this.saveChangesInLocalStorage()}saveChangesInLocalStorage(){localStorage.setItem("insuranceList",JSON.stringify(this.insurancesList))}static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275prov=c({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();export{g as a,w as b};
